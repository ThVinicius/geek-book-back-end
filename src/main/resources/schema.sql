CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS '
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
' LANGUAGE plpgsql;

CREATE TYPE OAuthType AS ENUM('EMAIL', 'GITHUB');

CREATE TYPE RoleType AS ENUM('ADMIN', 'USER');

CREATE TABLE roles (
	id SERIAL PRIMARY KEY,
	name RoleType NOT NULL UNIQUE,
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	nickname VARCHAR(16) NOT NULL,
	avatar TEXT,
	email TEXT NOT NULL,
	password TEXT,
	authorize_type OAuthType NOT NULL,
	role_id INT NOT NULL REFERENCES "roles"("id"),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TRIGGER set_timestamp
    BEFORE UPDATE
    ON
        roles
    FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE
    ON
        users
    FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();
